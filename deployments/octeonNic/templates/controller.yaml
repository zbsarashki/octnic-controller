{{- if (.Values.octnicupdater.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: octnicupdater-controller-manager
  namespace: {{.Release.Namespace}}
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        #command: ["/bin/bash"]
        #args:
        #- "-c"
        #- "--"
        #- >
        #   sleep infinity;
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: {{ include "octnicupdater.fullimage" . }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        {{- range $path, $_ := .Files.Glob "manifests/dev-plugin/*" }}
        - name: assets
          mountPath: {{ printf "/manifests/dev-plugin/%s" (base $path) }}
          subPath: {{ printf "%s" (base $path) }}
          readOnly: true
        {{- end }}

        {{- range $path, $_ := .Files.Glob "manifests/drv-daemon/*" }}
        - name: assets
          mountPath: {{ printf "/manifests/drv-daemon/%s" (base $path) }}
          subPath: {{ printf "%s" (base $path) }}
          readOnly: true
        {{- end }}

        {{- range $path, $_ := .Files.Glob "manifests/drv-daemon-validate/*" }}
        - name: assets
          mountPath: {{ printf "/manifests/drv-daemon-validate/%s" (base $path) }}
          subPath: {{ printf "%s" (base $path) }}
          readOnly: true
        {{- end }}

        {{- range $path, $_ := .Files.Glob "manifests/dev-update/*" }}
        - name: assets
          mountPath: {{ printf "/manifests/dev-update/%s" (base $path) }}
          subPath: {{ printf "%s" (base $path) }}
          readOnly: true
        {{- end }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: octnicupdater-controller-manager
      {{- if .Values.octnicupdater.priorityClassName }}
      priorityClassName: {{ .Values.octnicupdater.priorityClassName }}
      {{- end }}
      {{- if .Values.octnicupdater.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.octnicupdater.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: assets
        configMap:
          name: assets-configmap
{{- end }}
